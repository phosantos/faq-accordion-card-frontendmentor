* {
  margin: 0px;
  padding: 0px;
  /* box-sizing: border-box; */
}

img {
  display: block;
}

body {
  background-image: linear-gradient(hsl(273, 75%, 66%), hsl(240, 73%, 65%));
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-family: "Kumbh Sans";
  color: hsl(240, 6%, 50%);
}

.content {
  background-color: #fff;
  display: grid;
  grid-template-columns: max-content 1fr;
  /* max-width: 920px; */
  border-radius: 30px;
}

.imgs {
  align-self: center;
  position: relative;
  left: -80px;
  background-image: url("./images/bg-pattern-desktop.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.imgs img:first-child {
  position: absolute;
  top: 135px;
  left: -10px;
}

.faq {
  height: 385px;
  align-self: start;
  padding: 0px 60px;
  padding: 80px 80px 80px 0px;
}

.faq dl {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.question {
  width: 350px;
}

.question::after {
  content: "";
  display: block;
  height: 1px;
  width: 100%;
  background-color: hsl(240, 5%, 91%);
  margin-top: 20px;
}

dd {
  display: none;
  /* margin-bottom: 10px; */
}

dd.active {
  display: block;
  animation: show 0.2s forwards;
}

@keyframes show {
  from {
    transform: translate3d(0, -20px, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

h1 {
  font-size: 32px;
  color: hsl(237, 12%, 33%);
  margin-bottom: 20px;
}

dt {
  font-size: 16px;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

dt::after {
  content: "";
  display: block;
  background-image: url("./images/icon-arrow-down.svg");
  width: 10px;
  height: 7px;
  transition: 0.3s;
}

dt.active {
  font-weight: 700;
  color: hsl(237, 12%, 33%);
}

dt:hover::after {
  transform: rotate(180deg);
}

dt.active::after {
  transform: rotate(180deg);
}
